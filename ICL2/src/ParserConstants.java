/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DEF = 4;
  /** RegularExpression Id. */
  int ASSIGN = 5;
  /** RegularExpression Id. */
  int DREF = 6;
  /** RegularExpression Id. */
  int IN = 7;
  /** RegularExpression Id. */
  int END = 8;
  /** RegularExpression Id. */
  int NEW = 9;
  /** RegularExpression Id. */
  int EQ = 10;
  /** RegularExpression Id. */
  int COMPEQ = 11;
  /** RegularExpression Id. */
  int BIGGER = 12;
  /** RegularExpression Id. */
  int SMALLER = 13;
  /** RegularExpression Id. */
  int SMALLEQ = 14;
  /** RegularExpression Id. */
  int BIGEQ = 15;
  /** RegularExpression Id. */
  int TRUE = 16;
  /** RegularExpression Id. */
  int FALSE = 17;
  /** RegularExpression Id. */
  int IF = 18;
  /** RegularExpression Id. */
  int THEN = 19;
  /** RegularExpression Id. */
  int ELSE = 20;
  /** RegularExpression Id. */
  int WHILE = 21;
  /** RegularExpression Id. */
  int DO = 22;
  /** RegularExpression Id. */
  int PRINT = 23;
  /** RegularExpression Id. */
  int PRINTLN = 24;
  /** RegularExpression Id. */
  int AND = 25;
  /** RegularExpression Id. */
  int OR = 26;
  /** RegularExpression Id. */
  int NOT = 27;
  /** RegularExpression Id. */
  int Id = 28;
  /** RegularExpression Id. */
  int Num = 29;
  /** RegularExpression Id. */
  int PLUS = 30;
  /** RegularExpression Id. */
  int MINUS = 31;
  /** RegularExpression Id. */
  int TIMES = 32;
  /** RegularExpression Id. */
  int DIV = 33;
  /** RegularExpression Id. */
  int REST = 34;
  /** RegularExpression Id. */
  int LPAR = 35;
  /** RegularExpression Id. */
  int RPAR = 36;
  /** RegularExpression Id. */
  int ELEND = 37;
  /** RegularExpression Id. */
  int SEQ = 38;
  /** RegularExpression Id. */
  int EL = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"def\"",
    "\":=\"",
    "\"!\"",
    "\"in\"",
    "\"end\"",
    "\"new\"",
    "\"=\"",
    "\"==\"",
    "\">\"",
    "\"<\"",
    "\"<=\"",
    "\">=\"",
    "\"true\"",
    "\"false\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"print\"",
    "\"println\"",
    "\"&&\"",
    "\"||\"",
    "\"~\"",
    "<Id>",
    "<Num>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"(\"",
    "\")\"",
    "\";;\"",
    "\";\"",
    "\"\\n\"",
  };

}
